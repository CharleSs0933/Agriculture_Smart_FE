"use client";

import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Button } from "@/components/ui/button";
import {
  AlertTriangle,
  Stethoscope,
  Pill,
  ImageIcon,
  MessageSquare,
  Send,
} from "lucide-react";
import { TicketForm } from "../support/ticket-form";
import Image from "next/image";

interface DiagnosisTabsProps {
  results: AnalysisResult;
  preview: string | null;
}

export function DiagnosisTabs({ results, preview }: DiagnosisTabsProps) {
  // Prepare ticket data from AI analysis
  const ticketTitle = `T∆∞ v·∫•n v·ªÅ b·ªánh ${results.disease_name} tr√™n ${results.plant_name}`;
  const ticketDescription = `T√¥i ƒë√£ s·ª≠ d·ª•ng AI ch·∫©n ƒëo√°n v√† nh·∫≠n ƒë∆∞·ª£c k·∫øt qu·∫£:

üå± Lo·∫°i c√¢y: ${results.plant_name}
üêõ B·ªánh: ${results.disease_name}

T√¥i mu·ªën ƒë∆∞·ª£c t∆∞ v·∫•n th√™m v·ªÅ:
- X√°c nh·∫≠n ch·∫©n ƒëo√°n
- Ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã c·ª• th·ªÉ cho ƒëi·ªÅu ki·ªán c·ªßa t√¥i
- Bi·ªán ph√°p ph√≤ng ng·ª´a hi·ªáu qu·∫£
- S·∫£n ph·∫©m ƒëi·ªÅu tr·ªã ph√π h·ª£p

C√°c tri·ªáu ch·ª©ng quan s√°t ƒë∆∞·ª£c:
${results.symptoms.map((s) => `‚Ä¢ ${s}`).join("\n")}

M√¥ t·∫£ b·ªánh:
${results.description.map((d) => `‚Ä¢ ${d}`).join("\n")}

Xin c·∫£m ∆°n!`;

  return (
    <div className="mx-auto max-w-5xl mt-8">
      <Tabs defaultValue="symptoms" className="w-full">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="symptoms" className="flex items-center gap-2">
            <AlertTriangle className="h-4 w-4" />
            <span className="hidden sm:inline">Tri·ªáu ch·ª©ng</span>
          </TabsTrigger>
          <TabsTrigger value="diagnosis" className="flex items-center gap-2">
            <Stethoscope className="h-4 w-4" />
            <span className="hidden sm:inline">Ch·∫©n ƒëo√°n</span>
          </TabsTrigger>
          <TabsTrigger value="treatment" className="flex items-center gap-2">
            <Pill className="h-4 w-4" />
            <span className="hidden sm:inline">ƒêi·ªÅu tr·ªã</span>
          </TabsTrigger>
          <TabsTrigger value="image" className="flex items-center gap-2">
            <ImageIcon className="h-4 w-4" />
            <span className="hidden sm:inline">H√¨nh ·∫£nh</span>
          </TabsTrigger>
          <TabsTrigger value="support" className="flex items-center gap-2">
            <MessageSquare className="h-4 w-4" />
            <span className="hidden sm:inline">H·ªó tr·ª£</span>
          </TabsTrigger>
        </TabsList>

        <TabsContent value="symptoms" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-amber-500" />
                Tri·ªáu ch·ª©ng b·ªánh
              </CardTitle>
              <CardDescription>
                C√°c d·∫•u hi·ªáu v√† tri·ªáu ch·ª©ng c·ªßa b·ªánh {results.disease_name} tr√™n{" "}
                {results.plant_name}
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center gap-2 mb-4">
                  <Badge variant="outline" className="bg-green-50">
                    {results.plant_name}
                  </Badge>
                  <Badge variant="outline" className="bg-red-50">
                    {results.disease_name}
                  </Badge>
                </div>
                <Separator />
                <ul className="space-y-3">
                  {results.symptoms.map((symptom, index) => (
                    <li key={index} className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-amber-500 rounded-full mt-2 flex-shrink-0" />
                      <span className="text-gray-700">{symptom}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="diagnosis" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Stethoscope className="h-5 w-5 text-blue-500" />
                Ch·∫©n ƒëo√°n chi ti·∫øt
              </CardTitle>
              <CardDescription>
                Th√¥ng tin chi ti·∫øt v·ªÅ b·ªánh {results.disease_name}
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center gap-2 mb-4">
                  <Badge variant="outline" className="bg-green-50">
                    {results.plant_name}
                  </Badge>
                  <Badge variant="outline" className="bg-red-50">
                    {results.disease_name}
                  </Badge>
                </div>
                <Separator />
                <div className="space-y-3">
                  {results.description.map((desc, index) => (
                    <p key={index} className="text-gray-700 leading-relaxed">
                      {desc}
                    </p>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="treatment" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Pill className="h-5 w-5 text-green-500" />
                Ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã
              </CardTitle>
              <CardDescription>
                H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã v√† ph√≤ng ng·ª´a b·ªánh {results.disease_name}
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center gap-2 mb-4">
                  <Badge variant="outline" className="bg-green-50">
                    {results.plant_name}
                  </Badge>
                  <Badge variant="outline" className="bg-red-50">
                    {results.disease_name}
                  </Badge>
                </div>
                <Separator />
                <div className="space-y-3">
                  {results.treatment.map((treatment, index) => (
                    <div key={index} className="flex items-start gap-3">
                      <div className="w-6 h-6 bg-green-100 text-green-600 rounded-full flex items-center justify-center text-sm font-medium flex-shrink-0 mt-0.5">
                        {index + 1}
                      </div>
                      <p className="text-gray-700 leading-relaxed">
                        {treatment}
                      </p>
                    </div>
                  ))}
                </div>
                <div className="mt-6 p-4 bg-amber-50 border border-amber-200 rounded-lg">
                  <p className="text-sm text-amber-800">
                    <strong>L∆∞u √Ω:</strong> Vui l√≤ng tham kh·∫£o √Ω ki·∫øn chuy√™n gia
                    n√¥ng nghi·ªáp tr∆∞·ªõc khi √°p d·ª•ng c√°c ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã. K·∫øt
                    qu·∫£ ch·∫©n ƒëo√°n AI ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="image" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <ImageIcon className="h-5 w-5 text-purple-500" />
                H√¨nh ·∫£nh ƒë√£ ph√¢n t√≠ch
              </CardTitle>
              <CardDescription>
                H√¨nh ·∫£nh c√¢y tr·ªìng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ch·∫©n ƒëo√°n
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center gap-2 mb-4">
                  <Badge variant="outline" className="bg-green-50">
                    {results.plant_name}
                  </Badge>
                  <Badge variant="outline" className="bg-red-50">
                    {results.disease_name}
                  </Badge>
                </div>
                <Separator />
                {preview && (
                  <div className="flex justify-center">
                    <div className="relative max-w-md w-full">
                      <Image
                        src={preview || "/placeholder.svg"}
                        alt="Analyzed plant image"
                        className="w-full h-auto rounded-lg border border-gray-200 shadow-sm"
                      />
                    </div>
                  </div>
                )}
                {!preview && (
                  <div className="flex justify-center items-center h-64 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300">
                    <p className="text-gray-500">
                      Kh√¥ng c√≥ h√¨nh ·∫£nh ƒë·ªÉ hi·ªÉn th·ªã
                    </p>
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="support" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <MessageSquare className="h-5 w-5 text-green-600" />
                Nh·∫≠n h·ªó tr·ª£ t·ª´ chuy√™n gia
              </CardTitle>
              <CardDescription>
                B·∫°n c·∫ßn t∆∞ v·∫•n th√™m v·ªÅ k·∫øt qu·∫£ ch·∫©n ƒëo√°n n√†y? G·ª≠i y√™u c·∫ßu h·ªó tr·ª£
                ƒë·∫øn c√°c k·ªπ s∆∞ n√¥ng nghi·ªáp chuy√™n nghi·ªáp c·ªßa ch√∫ng t√¥i.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                  <h4 className="font-medium text-blue-900 mb-3">
                    Th√¥ng tin s·∫Ω ƒë∆∞·ª£c g·ª≠i k√®m:
                  </h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-blue-800">
                    <div className="space-y-1">
                      <div>üå± Lo·∫°i c√¢y: {results.plant_name}</div>
                      <div>üêõ B·ªánh: {results.disease_name}</div>
                    </div>
                    <div className="space-y-1">
                      <div>‚Ä¢ H√¨nh ·∫£nh ƒë√£ ph√¢n t√≠ch</div>
                      <div>‚Ä¢ C√°c tri·ªáu ch·ª©ng ƒë∆∞·ª£c ph√°t hi·ªán</div>
                      <div>‚Ä¢ Th√¥ng tin m√¥ t·∫£ v√† ƒëi·ªÅu tr·ªã</div>
                    </div>
                  </div>
                </div>

                <div className="space-y-4">
                  <h4 className="font-medium">C√°c tri·ªáu ch·ª©ng ƒë√£ ph√°t hi·ªán:</h4>
                  <ul className="space-y-2">
                    {results.symptoms.slice(0, 3).map((symptom, index) => (
                      <li
                        key={index}
                        className="flex items-start gap-2 text-sm text-gray-600"
                      >
                        <span className="text-amber-500 mt-1">‚Ä¢</span>
                        {symptom}
                      </li>
                    ))}
                    {results.symptoms.length > 3 && (
                      <li className="text-sm text-gray-500">
                        ... v√† {results.symptoms.length - 3} tri·ªáu ch·ª©ng kh√°c
                      </li>
                    )}
                  </ul>
                </div>

                <TicketForm
                  defaultTitle={ticketTitle}
                  defaultDescription={ticketDescription}
                  aiDiagnosisData={{
                    plant_name: results.plant_name,
                    disease_name: results.disease_name,
                    image: preview || "",
                  }}
                  trigger={
                    <Button className="w-full bg-green-600 hover:bg-green-700">
                      <Send className="h-4 w-4 mr-2" />
                      G·ª≠i y√™u c·∫ßu h·ªó tr·ª£ chuy√™n gia
                    </Button>
                  }
                />
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}
